{"$message_type":"diagnostic","message":"variable `startGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":32,"line_end":32,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"pub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":32,"line_end":32,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"pub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"start_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `startGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:32:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `start_gene`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `endGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":1297,"byte_end":1304,"line_start":32,"line_end":32,"column_start":40,"column_end":47,"is_primary":true,"text":[{"text":"pub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {","highlight_start":40,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":1297,"byte_end":1304,"line_start":32,"line_end":32,"column_start":40,"column_end":47,"is_primary":true,"text":[{"text":"pub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {","highlight_start":40,"highlight_end":47}],"label":null,"suggested_replacement":"end_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `endGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:32:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn min_mutation(startGene: String, endGene: String, bank: Vec<String>) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `end_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `startGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3203,"byte_end":3212,"line_start":88,"line_end":88,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3203,"byte_end":3212,"line_start":88,"line_end":88,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"start_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `startGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let startGene = \"AACCGGTT\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `start_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `endGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3251,"byte_end":3258,"line_start":89,"line_end":89,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AACCGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3251,"byte_end":3258,"line_start":89,"line_end":89,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AACCGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `endGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:89:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let endGene = \"AACCGGTA\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `end_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `startGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3454,"byte_end":3463,"line_start":96,"line_end":96,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3454,"byte_end":3463,"line_start":96,"line_end":96,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"start_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `startGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:96:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let startGene = \"AACCGGTT\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `start_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `endGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3502,"byte_end":3509,"line_start":97,"line_end":97,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AAACGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3502,"byte_end":3509,"line_start":97,"line_end":97,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AAACGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `endGene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:97:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let endGene = \"AAACGGTA\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `end_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `startGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3761,"byte_end":3770,"line_start":104,"line_end":104,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3761,"byte_end":3770,"line_start":104,"line_end":104,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let startGene = \"AACCGGTT\".to_string();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"start_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `startGene` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:104:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let startGene = \"AACCGGTT\".to_string();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `start_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `endGene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3809,"byte_end":3816,"line_start":105,"line_end":105,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AAACGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"minimum_genetic_mutation/src/lib.rs","byte_start":3809,"byte_end":3816,"line_start":105,"line_end":105,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let endGene = \"AAACGGTA\".to_string();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_gene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `endGene` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mminimum_genetic_mutation/src/lib.rs:105:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let endGene = \"AAACGGTA\".to_string();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `end_gene`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"8 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 8 warnings emitted\u001b[0m\n\n"}
